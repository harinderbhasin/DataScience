{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww20840\viewh15160\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Mini Project 4\
# Question 1\
\
import pandas as pd\
import xml.etree.ElementTree as ET\
\
\
# read the player data text file into a python dataframe using panda\
playerdata=pd.read_csv('/Users/pbyrd/anaconda/Data/Baseball/baseball_salaries_2003.txt',sep=":",skiprows=3, names=('Team','Player','Salary','Position'))\
\
\
# define a function that converts the dataframe to xml and writes to a xml file\
def df_to_xml(df, filename=None, mode='w'):\
    def row_to_xml(row):\
        xml = ['  <playerdata>']\
        for i, col_name in enumerate(row.index):\
            xml.append('    <\{0\}>\{1\}</\{0\}>'.format(col_name, row.iloc[i]))\
        xml.append('  </playerdata>')\
        return '\\n'.join(xml)\
    res = '<?xml version="1.0" encoding="UTF-8"?>\\n<baseball>\\n' + '\\n'.join(df.apply(row_to_xml, axis=1)) + '\\n</baseball>'\
\
    if filename is None:\
        return res\
    with open(filename, mode) as f:\
        f.write(res)\
\
        \
# execute the function on the dataframe 'playerdata', with output file 'baseball_salaries_2003.xml'\
df_to_xml(playerdata,'/Users/pbyrd/anaconda/Data/Baseball/baseball_salaries_2003.xml')\
}